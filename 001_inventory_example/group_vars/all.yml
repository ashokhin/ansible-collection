---
# Common variables for all hosts
# Example:
ansible_become: true
ansible_become_method: sudo
ansible_become_user: root

grafana_basic_auth:
  username: 'prometheus'
  password: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    =EXAMPLE_VALUE=13736316462313135303864363762323539646234643636633136313865663666
    3236343632623963366261323138613230346235643939650a666230353662656232646661313437

haproxy_basic_auth:
  username: 'haproxy_web'
  password: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    =EXAMPLE_VALUE=16535396232663334316638343365623230373136373134356664393565353934
    3065323132383933663539343138666636383966313036340a613330396664633736633037353235

prometheus_version: "3.5.0"
prometheus_web_listen_port: "9090"
prometheus_web_listen_address: "127.0.0.1:{{ prometheus_web_listen_port }}"

node_exporter_web_listen_port: "9100"
node_exporter_web_listen_address: "127.0.0.1:{{ node_exporter_web_listen_port }}"

alertmanager_web_listen_port: "9093"
alertmanager_web_listen_address: "127.0.0.1:{{ alertmanager_web_listen_port }}"

grafana_web_listen_port: "3000"
grafana_web_listen_address: "127.0.0.1:{{ grafana_web_listen_port }}"

haproxy_exporter_listen_address: "127.0.0.1:8405"

haproxy_config:
  global:
  # yamllint disable rule:line-length
    params: |-
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user {{ haproxy_user }}
        group {{ haproxy_group }}
        daemon
        ca-base /etc/letsencrypt/live/mymonitoring.example.com
        crt-base /etc/letsencrypt/live/mymonitoring.example.com
        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
  # yamllint enable rule:line-length
  userlists:
    - name: "monitoring"
      params: |
        user {{ haproxy_basic_auth.username }} password {{ haproxy_basic_auth.password }}
  frontends:
    - name: "haproxy_exporter"
      params: |
        bind {{ haproxy_exporter_listen_address }}
        mode http
        http-request use-service prometheus-exporter
        no log
    - name: "fe_443"
      params: |
          bind *:443 ssl crt /etc/haproxy/ssl/fullchain.pem
          # ACL checks that the client address is from local network
          acl is_allowed_ipv4 src 192.168.1.1/24
          # ACL checks that the client is authenticated
          acl is_authenticated http_auth(monitoring)
          # Ask for auth unless client is not from 'allowed' list (ACL)
          # or client doesn't have authentication.
          # Which means - "Do not ask 'allowed' clients about auth",
          # or - "You have to be 'allowed' OR 'authenticated'"
          http-request auth unless is_allowed_ipv4 || is_authenticated
          acl acl-prometheus path /prometheus
          acl acl-prometheus path_beg /prometheus/
          acl acl-alertmanager path /alertmanager
          acl acl-alertmanager path_beg /alertmanager/
          acl acl-grafana path /grafana
          acl acl-grafana path_beg /grafana/
          use_backend be_prometheus if acl-prometheus
          use_backend be_alertmanager if acl-alertmanager
          use_backend be_grafana if acl-grafana
  backends:
    - name: "be_prometheus"
      params: |
        option httpchk GET /prometheus/-/healthy
        server server1 {{ prometheus_web_listen_address }} check
    - name: "be_alertmanager"
      params: |
        option httpchk GET /alertmanager/-/healthy
        server server1 {{ alertmanager_web_listen_address }} check
    - name: "be_grafana"
      params: |
        option httpchk GET /grafana/api/health
        server server1 {{ grafana_web_listen_address }} check
...
